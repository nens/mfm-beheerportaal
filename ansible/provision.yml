# Goal: do the root-related basic provisioning for a site (now: only this
# server). A buildout user is set up with ssh keys so that the relevant devs
# can ssh in as user buildout, which will be used by the deploy.yml script.
---
- name: provision server to prepare for the actual deployment
  hosts: web
  become: yes
  tasks:

    - name: Add build user "{{ build_user }}" and set an unusable password.
      user:
        name: "{{ build_user }}"
        password: '*'
        state: present
        shell: "/bin/bash"
        groups: ''  # ensuring buildout is not a member of the sudo group
        append: no  # append=yes would make groups='' ineffective
        
    - name: Add executing user to authorized ssh keys
      authorized_key:
        user: "{{ build_user }}"
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

    - name: Grant "{{ build_user }}" permission to reload nginx
      lineinfile:
        path: /etc/sudoers.d/buildout
        line: "buildout ALL= NOPASSWD: /usr/sbin/service nginx *"
        validate: /usr/sbin/visudo -cqf %s
        create: yes
        mode: 0440

    - name: Install apt packages.
      apt: name={{ item }} state=latest
      with_items:
        - git
        - python3-dev
        - python3-pip
        - supervisor
        - memcached
        - nginx
        - logrotate
        - libmariadbclient-dev # for mariadb backend

    - name: Upgrade setuptools
      pip:
        name: setuptools
        state: latest

    - name: Install pip
      pip:
        name: pip
        state: latest

    - name: Install pipenv
      pip:
        name: pipenv
        version: latest

    - name: Create the project path.
      file:
        path: "{{ project_path }}"
        state: directory
        mode: 0755
        owner: "{{ build_user }}"
        group: "{{ build_user }}"

    - name: Check whether nginx config exists
      stat: path={{ project_path }}/etc/{{ site_name }}.nginx.conf
      register: nginx_conffile

    - name: Symlink and enable nginx config, when available.
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
        force: yes
      with_items:
      - { src: "{{ project_path }}/etc/{{ site_name }}.nginx.conf" , dest: "/etc/nginx/sites-available/{{ site_name }}.nginx.conf" }
      - { src: "/etc/nginx/sites-available/{{ site_name }}.nginx.conf", dest: "/etc/nginx/sites-enabled/{{ site_name }}.nginx.conf" }
      when: nginx_conffile.stat.exists

    # logrotate does not pickup symlinks; we have to supply the config as root
    - name: Configure logrotate
      become: yes
      template:
        src: "templates/logrotate.j2"
        dest: "/etc/logrotate.d/{{ site_name }}"
        owner: root  # user, group and mode are required by logrotate
        group: root
        mode: 0644
      when: nginx_conffile.stat.exists
